#!/usr/bin/env node

var argv = require("yargs")
  .usage("Usage: $0 <config location> [profile]")
  .example("$0 http://server/env.json", "Use first or only environment encountered at env.json on server")
  .example("$0 http://server/env.json prod", "Use env 'prod' from env.json on server")
  .example("$0 http://server/env.json prod-limitworker", "merge and use content from 'prod' and 'limitworker'" +
     "from env.json on server, latter environment has higher priority")
  .demand(1)
  .argv;

var request = require("request");
var _ = require("lodash");

var environmentLocation = argv._[0];
var environmentNames;

if (argv._.length > 1) {
  environmentNames = argv._[1].split("-");
}

request(environmentLocation, function (error, response, body) {

  if (error) {
    console.error(error);
    process.exit(1);
  } else {
  
    try {
      var environments = JSON.parse(body);
      if (!environments) {
        throw new Error("Body is empty or null");
      }

      if (Object.keys(environments).length === 0) {
        throw new Error("No environments defined");
      }

      if (!environmentNames) {
        environmentNames = [Object.keys(environments)[0]];
      }
      
      var commonEnv = environments._;
      if (commonEnv) {
        console.log("echo \"Inheriting from common environment ( _ )\"");
      }

      var env = _.extend({}, commonEnv);

      _.forEach(environmentNames, function(environmentName){
        console.log(environmentName)
        if (!environments.hasOwnProperty(environmentName)) {
          throw new Error("The environment name " + environmentName + " was not found");
        }

        if (!environments[environmentName] || typeof environments[environmentName] !== "object") {
          throw new Error("The environment " + environmentName + " is null, undefined, or not an object");
        }

        env = _.extend({}, env, environments[environmentName]);
        console.log("echo \"Setting environment " + environmentName + " from " + environmentLocation + "\";");
      });

      Object.keys(env).forEach(function (k) {
        console.log("echo \"Setting " + k + "\";");
        console.log("export " + k + "=\"" + env[k] + "\";");
      });

      console.log("echo Done;");

    } catch (e) {
      console.error("Could not parse body");
      process.exit(1);
    }
  }
});
